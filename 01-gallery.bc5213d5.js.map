{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_array_without_holes.js","node_modules/@swc/helpers/lib/_array_like_to_array.js","node_modules/@swc/helpers/lib/_iterable_to_array.js","node_modules/@swc/helpers/lib/_non_iterable_spread.js","node_modules/@swc/helpers/lib/_unsupported_iterable_to_array.js","src/js/gallery-items.js","node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","node_modules/@swc/helpers/lib/_define_property.js","node_modules/@swc/helpers/lib/_to_consumable_array.js","node_modules/simplelightbox/dist/simple-lightbox.esm.js","src/js/01-gallery.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayWithoutHoles;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return (0, _arrayLikeToArray).default(arr);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayLikeToArray;\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _iterableToArray;\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _nonIterableSpread;\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _unsupportedIterableToArray;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, _arrayLikeToArray).default(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, _arrayLikeToArray).default(o, minLen);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","export const galleryItems = [\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/14/16/43/himilayan-blue-poppy-4202825__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/14/16/43/himilayan-blue-poppy-4202825_1280.jpg',\n    description: 'Hokkaido Flower',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/14/22/05/container-4203677__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/14/22/05/container-4203677_1280.jpg',\n    description: 'Container Haulage Freight',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/16/09/47/beach-4206785__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/16/09/47/beach-4206785_1280.jpg',\n    description: 'Aerial Beach View',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2016/11/18/16/19/flowers-1835619__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2016/11/18/16/19/flowers-1835619_1280.jpg',\n    description: 'Flower Blooms',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2018/09/13/10/36/mountains-3674334__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2018/09/13/10/36/mountains-3674334_1280.jpg',\n    description: 'Alpine Mountains',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/16/23/04/landscape-4208571__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/16/23/04/landscape-4208571_1280.jpg',\n    description: 'Mountain Lake Sailing',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/17/09/27/the-alps-4209272__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/17/09/27/the-alps-4209272_1280.jpg',\n    description: 'Alpine Spring Meadows',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/16/21/10/landscape-4208255__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/16/21/10/landscape-4208255_1280.jpg',\n    description: 'Nature Landscape',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/17/04/35/lighthouse-4208843__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/17/04/35/lighthouse-4208843_1280.jpg',\n    description: 'Lighthouse Coast Sea',\n  },\n];\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _toConsumableArray;\nvar _arrayWithoutHoles = _interopRequireDefault(require(\"./_array_without_holes\"));\nvar _iterableToArray = _interopRequireDefault(require(\"./_iterable_to_array\"));\nvar _nonIterableSpread = _interopRequireDefault(require(\"./_non_iterable_spread\"));\nvar _unsupportedIterableToArray = _interopRequireDefault(require(\"./_unsupported_iterable_to_array\"));\nfunction _toConsumableArray(arr) {\n    return (0, _arrayWithoutHoles).default(arr) || (0, _iterableToArray).default(arr) || (0, _unsupportedIterableToArray).default(arr) || (0, _nonIterableSpread).default();\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","/*!\r\n\tBy André Rinas, www.andrerinas.de\r\n\tDocumentation, www.simplelightbox.de\r\n\tAvailable for use under the MIT License\r\n\tVersion 2.11.0\r\n*/\nclass SimpleLightbox {\n\n    defaultOptions = {\n        sourceAttr: 'href',\n        overlay: true,\n        overlayOpacity: 0.7,\n        spinner: true,\n        nav: true,\n        navText: ['&lsaquo;', '&rsaquo;'],\n        captions: true,\n        captionDelay: 0,\n        captionSelector: 'img',\n        captionType: 'attr',\n        captionsData: 'title',\n        captionPosition: 'bottom',\n        captionClass: '',\n        close: true,\n        closeText: '&times;',\n        swipeClose: true,\n        showCounter: true,\n        fileExt: 'png|jpg|jpeg|gif|webp',\n        animationSlide: true,\n        animationSpeed: 250,\n        preloading: true,\n        enableKeyboard: true,\n        loop: true,\n        rel: false,\n        docClose: true,\n        swipeTolerance: 50,\n        className: 'simple-lightbox',\n        widthRatio: 0.8,\n        heightRatio: 0.9,\n        scaleImageToRatio: false,\n        disableRightClick: false,\n        disableScroll: true,\n        alertError: true,\n        alertErrorMessage: 'Image not found, next image will be loaded',\n        additionalHtml: false,\n        history: true,\n        throttleInterval: 0,\n        doubleTapZoom: 2,\n        maxZoom: 10,\n        htmlClass: 'has-lightbox',\n        rtl: false,\n        fixedClass: 'sl-fixed',\n        fadeSpeed: 300,\n        uniqueImages: true,\n        focus: true,\n        scrollZoom: true,\n        scrollZoomFactor: 0.5\n    };\n\n    transitionPrefix;\n    isPassiveEventsSupported;\n    transitionCapable = false;\n\n    isTouchDevice = ('ontouchstart' in window);\n    isAppleDevice = /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\n\n    initialLocationHash;\n\n    pushStateSupport = ('pushState' in history);\n\n    isOpen = false;\n    isAnimating = false;\n    isClosing = false;\n    isFadeIn = false;\n    urlChangedOnce = false;\n    hashReseted = false;\n    historyHasChanges = false;\n    historyUpdateTimeout = null;\n\n    currentImage;\n    eventNamespace = 'simplelightbox';\n    domNodes = {};\n\n    loadedImages = [];\n    initialImageIndex = 0;\n    currentImageIndex = 0;\n\n    initialSelector = null;\n    globalScrollbarWidth = 0;\n\n    controlCoordinates = {\n        swipeDiff: 0,\n        swipeYDiff: 0,\n        swipeStart: 0,\n        swipeEnd: 0,\n        swipeYStart: 0,\n        swipeYEnd: 0,\n        mousedown: false,\n        imageLeft: 0,\n        zoomed: false,\n        containerHeight: 0,\n        containerWidth: 0,\n        containerOffsetX: 0,\n        containerOffsetY: 0,\n        imgHeight: 0,\n        imgWidth: 0,\n        capture: false,\n        initialOffsetX: 0,\n        initialOffsetY: 0,\n        initialPointerOffsetX: 0,\n        initialPointerOffsetY: 0,\n        initialPointerOffsetX2: 0,\n        initialPointerOffsetY2: 0,\n        initialScale: 1,\n        initialPinchDistance: 0,\n        pointerOffsetX: 0,\n        pointerOffsetY: 0,\n        pointerOffsetX2: 0,\n        pointerOffsetY2: 0,\n        targetOffsetX: 0,\n        targetOffsetY: 0,\n        targetScale: 0,\n        pinchOffsetX: 0,\n        pinchOffsetY: 0,\n        limitOffsetX: 0,\n        limitOffsetY: 0,\n        scaleDifference: 0,\n        targetPinchDistance: 0,\n        touchCount: 0,\n        doubleTapped: false,\n        touchmoveCount: 0\n    };\n\n    constructor(elements, options) {\n\n        this.options = Object.assign(this.defaultOptions, options);\n        this.isPassiveEventsSupported = this.checkPassiveEventsSupport();\n\n        if (typeof elements === 'string') {\n            this.initialSelector = elements;\n            this.elements = Array.from(document.querySelectorAll(elements));\n        } else {\n            this.elements = ((typeof elements.length !== 'undefined') && elements.length > 0) ? Array.from(elements) : [elements];\n        }\n\n        this.relatedElements = [];\n\n        this.transitionPrefix = this.calculateTransitionPrefix();\n        this.transitionCapable = this.transitionPrefix !== false;\n        this.initialLocationHash = this.hash;\n\n        // this should be handled by attribute selector IMHO! => 'a[rel=bla]'...\n        if (this.options.rel) {\n            this.elements = this.getRelated(this.options.rel);\n        }\n\n        if (this.options.uniqueImages) {\n            let imgArr = [];\n            this.elements = Array.from(this.elements).filter(\n                element => {\n                    let src = element.getAttribute(this.options.sourceAttr);\n                    if(imgArr.indexOf(src) === -1) {\n                        imgArr.push(src);\n                        return true;\n                    }\n                    return false;\n                }\n            );\n        }\n\n        this.createDomNodes();\n\n        if (this.options.close) {\n            this.domNodes.wrapper.appendChild(this.domNodes.closeButton);\n        }\n\n        if (this.options.nav) {\n            this.domNodes.wrapper.appendChild(this.domNodes.navigation);\n        }\n\n        if (this.options.spinner) {\n            this.domNodes.wrapper.appendChild(this.domNodes.spinner);\n        }\n\n        this.addEventListener(this.elements, 'click.' + this.eventNamespace, (event) => {\n\n            if (this.isValidLink(event.currentTarget)) {\n                event.preventDefault();\n                if (this.isAnimating) {\n                    return false;\n                }\n\n                this.initialImageIndex = this.elements.indexOf(event.currentTarget);\n                this.openImage(event.currentTarget);\n            }\n        });\n\n        // close addEventListener click addEventListener doc\n        if (this.options.docClose) {\n            this.addEventListener(this.domNodes.wrapper, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], (event) => {\n                if (this.isOpen && event.target === event.currentTarget) {\n                    this.close();\n                }\n            });\n        }\n\n        // disable rightclick\n        if (this.options.disableRightClick) {\n            this.addEventListener(document.body, 'contextmenu.' + this.eventNamespace, (event) => {\n                if (event.target.parentElement.classList.contains(\"sl-image\")) {\n                    event.preventDefault();\n                }\n            });\n        }\n\n        // keyboard-control\n        if (this.options.enableKeyboard) {\n            this.addEventListener(document.body, 'keyup.' + this.eventNamespace, this.throttle((event) => {\n                this.controlCoordinates.swipeDiff = 0;\n                // keyboard control only if lightbox is open\n\n                if (this.isAnimating && event.key === 'Escape') {\n                    this.currentImage.setAttribute('src', '');\n                    this.isAnimating = false;\n                    return this.close();\n                }\n\n                if (this.isOpen) {\n                    event.preventDefault();\n                    if (event.key === 'Escape') {\n                        this.close();\n                    }\n                    if(!this.isAnimating && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) > -1) {\n                      this.loadImage(event.key === 'ArrowRight' ? 1 : -1);\n                    }\n                }\n            }, this.options.throttleInterval));\n        }\n\n        this.addEvents();\n    }\n\n    checkPassiveEventsSupport() {\n        // https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n        // Test via a getter in the options object to see if the passive property is accessed\n        let supportsPassive = false;\n        try {\n            let opts = Object.defineProperty({}, 'passive', {\n                get: function() {\n                    supportsPassive = true;\n                }\n            });\n            window.addEventListener(\"testPassive\", null, opts);\n            window.removeEventListener(\"testPassive\", null, opts);\n        } catch (e) {}\n        return supportsPassive;\n    }\n\n    generateQuerySelector(elem) {\n        const {\n            tagName,\n            id,\n            className,\n            parentNode\n        } = elem;\n\n        if (tagName === 'HTML') return 'HTML';\n\n        let str = tagName;\n\n        str += (id !== '') ? `#${id}` : '';\n\n        if (className) {\n            const classes = className.split(/\\s/);\n            for (let i = 0; i < classes.length; i++) {\n                str += `.${classes[i]}`;\n            }\n        }\n\n        let childIndex = 1;\n\n        for (let e = elem; e.previousElementSibling; e = e.previousElementSibling) {\n            childIndex += 1;\n        }\n\n        str += `:nth-child(${childIndex})`;\n\n        return `${this.generateQuerySelector(parentNode)} > ${str}`;\n    }\n\n    // generateQuerySelector(el) {\n    //     if (el.tagName.toLowerCase() == \"html\")\n    //         return \"HTML\";\n    //     var str = el.tagName;\n    //     str += (el.id != \"\") ? \"#\" + el.id : \"\";\n    //     if (el.className) {\n    //         var classes = el.className.split(/\\s/);\n    //         for (var i = 0; i < classes.length; i++) {\n    //             str += \".\" + classes[i]\n    //         }\n    //     }\n    //     return this.generateQuerySelector(el.parentNode) + \" > \" + str;\n    // }\n\n    createDomNodes() {\n        this.domNodes.overlay = document.createElement('div');\n        this.domNodes.overlay.classList.add('sl-overlay');\n        this.domNodes.overlay.dataset.opacityTarget = this.options.overlayOpacity;\n\n        this.domNodes.closeButton = document.createElement('button');\n        this.domNodes.closeButton.classList.add('sl-close');\n        this.domNodes.closeButton.innerHTML = this.options.closeText;\n\n        this.domNodes.spinner = document.createElement('div');\n        this.domNodes.spinner.classList.add('sl-spinner');\n        this.domNodes.spinner.innerHTML = '<div></div>';\n\n        this.domNodes.navigation = document.createElement('div');\n        this.domNodes.navigation.classList.add('sl-navigation');\n        this.domNodes.navigation.innerHTML = `<button class=\"sl-prev\">${this.options.navText[0]}</button><button class=\"sl-next\">${this.options.navText[1]}</button>`;\n\n        this.domNodes.counter = document.createElement('div');\n        this.domNodes.counter.classList.add('sl-counter');\n        this.domNodes.counter.innerHTML = '<span class=\"sl-current\"></span>/<span class=\"sl-total\"></span>';\n\n        this.domNodes.caption = document.createElement('div');\n        this.domNodes.caption.classList.add('sl-caption', 'pos-' + this.options.captionPosition);\n        if (this.options.captionClass) {\n            let captionClasses = this.options.captionClass.split(/[\\s,]+/);\n            this.domNodes.caption.classList.add(...captionClasses);\n        }\n\n        this.domNodes.image = document.createElement('div');\n        this.domNodes.image.classList.add('sl-image');\n\n        this.domNodes.wrapper = document.createElement('div');\n        this.domNodes.wrapper.classList.add('sl-wrapper');\n        this.domNodes.wrapper.setAttribute('tabindex',-1);\n        this.domNodes.wrapper.setAttribute('role','dialog');\n        this.domNodes.wrapper.setAttribute('aria-hidden',false);\n        if (this.options.className) {\n            this.domNodes.wrapper.classList.add(this.options.className);\n        }\n        if(this.options.rtl) {\n            this.domNodes.wrapper.classList.add('sl-dir-rtl');\n        }\n    }\n\n    throttle(func, limit) {\n        let inThrottle;\n        return function () {\n            if (!inThrottle) {\n                func.apply(this, arguments);\n                inThrottle = true;\n                setTimeout(function () {\n                    return inThrottle = false;\n                }, limit);\n            }\n        };\n    }\n\n    isValidLink(element) {\n        return (!this.options.fileExt) || ( element.getAttribute(this.options.sourceAttr) && (new RegExp('(' + this.options.fileExt + ')$', 'i')).test(element.getAttribute(this.options.sourceAttr)));\n    }\n\n    calculateTransitionPrefix() {\n        let s = (document.body || document.documentElement).style;\n\n        return 'transition' in s ? '' :\n            'WebkitTransition' in s ? '-webkit-' :\n                'MozTransition' in s ? '-moz-' :\n                    'OTransition' in s ? '-o' :\n                        false;\n    }\n\n    getScrollbarWidth() {\n        let scrollbarWidth = 0;\n        let scrollDiv = document.createElement('div');\n        scrollDiv.classList.add('sl-scrollbar-measure');\n\n        document.body.appendChild(scrollDiv);\n        scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n        document.body.removeChild(scrollDiv);\n        return scrollbarWidth;\n    }\n\n    toggleScrollbar(type) {\n        let scrollbarWidth = 0;\n        let fixedElements =  [].slice.call(document.querySelectorAll('.'+this.options.fixedClass))\n        if (type === 'hide') {\n            let fullWindowWidth = window.innerWidth;\n            if (!fullWindowWidth) {\n                let documentElementRect = document.documentElement.getBoundingClientRect();\n                fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left);\n            }\n            if (document.body.clientWidth < fullWindowWidth || this.isAppleDevice) {\n                let paddingRight = parseInt(document.body.style.paddingRight || 0, 10);\n                scrollbarWidth = this.getScrollbarWidth();\n                document.body.dataset.originalPaddingRight = paddingRight;\n                if (scrollbarWidth > 0 || (scrollbarWidth == 0 && this.isAppleDevice)) {\n                    document.body.classList.add('hidden-scroll');\n                    document.body.style.paddingRight = (paddingRight + scrollbarWidth) + 'px';\n\n                    fixedElements.forEach(element => {\n                        const actualPadding = element.style.paddingRight\n                        const calculatedPadding = window.getComputedStyle(element)['padding-right']\n                        element.dataset.originalPaddingRight = actualPadding;\n                        element.style.paddingRight = `${parseFloat(calculatedPadding) + scrollbarWidth}px`\n                    });\n\n                }\n            }\n        } else {\n            document.body.classList.remove('hidden-scroll');\n            document.body.style.paddingRight = document.body.dataset.originalPaddingRight;\n\n            fixedElements.forEach(element => {\n                const padding = element.dataset.originalPaddingRight;\n                if (typeof padding !== 'undefined') {\n                    element.style.paddingRight = padding\n                }\n            });\n        }\n        return scrollbarWidth;\n    }\n\n    close() {\n        if (!this.isOpen || this.isAnimating || this.isClosing) {\n            return false;\n        }\n\n        this.isClosing = true;\n        let element = this.relatedElements[this.currentImageIndex];\n        element.dispatchEvent(new Event('close.simplelightbox'));\n\n        if (this.options.history) {\n            this.historyHasChanges = false;\n            if(!this.hashReseted) {\n                this.resetHash();\n            }\n        }\n\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n\n        this.fadeOut(this.domNodes.overlay, this.options.fadeSpeed);\n        this.fadeOut(document.querySelectorAll('.sl-image img,  .sl-close, .sl-navigation, .sl-image .sl-caption, .sl-counter'), this.options.fadeSpeed, () => {\n            if (this.options.disableScroll) {\n                this.toggleScrollbar('show');\n            }\n\n            if (this.options.htmlClass && this.options.htmlClass !== '') {\n                document.querySelector('html').classList.remove(this.options.htmlClass);\n            }\n\n            document.body.removeChild(this.domNodes.wrapper);\n            document.body.removeChild(this.domNodes.overlay);\n            this.domNodes.additionalHtml = null;\n\n            element.dispatchEvent(new Event('closed.simplelightbox'));\n\n            this.isClosing = false;\n        });\n\n        this.currentImage = null;\n        this.isOpen = false;\n        this.isAnimating = false;\n\n        // reset touchcontrol coordinates\n        for (let key in this.controlCoordinates) {\n            this.controlCoordinates[key] = 0;\n        }\n        this.controlCoordinates.mousedown = false;\n        this.controlCoordinates.zoomed = false;\n        this.controlCoordinates.capture = false;\n        this.controlCoordinates.initialScale = this.minMax(1, 1, this.options.maxZoom);\n        this.controlCoordinates.doubleTapped = false;\n    }\n\n    get hash() {\n        return window.location.hash.substring(1);\n    }\n\n    preload() {\n        let index = this.currentImageIndex,\n            length = this.relatedElements.length,\n            next = (index + 1 < 0) ? length - 1 : (index + 1 >= length - 1) ? 0 : index + 1,\n            prev = (index - 1 < 0) ? length - 1 : (index - 1 >= length - 1) ? 0 : index - 1,\n            nextImage = new Image(),\n            prevImage = new Image();\n\n        nextImage.addEventListener('load', (event) => {\n            let src = event.target.getAttribute('src');\n            if (this.loadedImages.indexOf(src) === -1) { //is this condition even required... setting multiple times will not change usage...\n                this.loadedImages.push(src);\n            }\n            this.relatedElements[index].dispatchEvent(new Event('nextImageLoaded.' + this.eventNamespace));\n        });\n        nextImage.setAttribute('src', this.relatedElements[next].getAttribute(this.options.sourceAttr));\n\n        prevImage.addEventListener('load', (event) => {\n            let src = event.target.getAttribute('src');\n            if (this.loadedImages.indexOf(src) === -1) {\n                this.loadedImages.push(src);\n            }\n            this.relatedElements[index].dispatchEvent(new Event('prevImageLoaded.' + this.eventNamespace));\n        });\n        prevImage.setAttribute('src', this.relatedElements[prev].getAttribute(this.options.sourceAttr));\n    }\n\n    loadImage(direction) {\n        let slideDirection = direction;\n        if(this.options.rtl) {\n            direction = -direction;\n        }\n\n        this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('change.' + this.eventNamespace));\n        this.relatedElements[this.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'next' : 'prev') + '.' + this.eventNamespace));\n\n        let newIndex = this.currentImageIndex + direction;\n\n        if (this.isAnimating || (newIndex < 0 || newIndex >= this.relatedElements.length) && this.options.loop === false) {\n            return false;\n        }\n\n        this.currentImageIndex = (newIndex < 0) ? this.relatedElements.length - 1 : (newIndex > this.relatedElements.length - 1) ? 0 : newIndex;\n\n        this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n\n\n        if (this.options.animationSlide) {\n            this.slide(this.options.animationSpeed / 1000, (-100 * slideDirection) - this.controlCoordinates.swipeDiff + 'px');\n        }\n        this.fadeOut(this.domNodes.image, this.options.fadeSpeed, () => {\n            this.isAnimating = true;\n            if(!this.isClosing) {\n                setTimeout(() => {\n                    let element = this.relatedElements[this.currentImageIndex];\n                    this.currentImage.setAttribute('src', element.getAttribute(this.options.sourceAttr));\n\n                    if (this.loadedImages.indexOf(element.getAttribute(this.options.sourceAttr)) === -1) {\n                        this.show(this.domNodes.spinner);\n                    }\n\n                    if(this.domNodes.image.contains(this.domNodes.caption)) {\n                      this.domNodes.image.removeChild(this.domNodes.caption);\n                    }\n\n                    this.adjustImage(slideDirection);\n                    if (this.options.preloading) this.preload();\n                }, 100);\n            } else {\n                this.isAnimating = false;\n            }\n        });\n    }\n\n    adjustImage(direction) {\n        if (!this.currentImage) {\n            return false;\n        }\n\n        let tmpImage = new Image(),\n            windowWidth = window.innerWidth * this.options.widthRatio,\n            windowHeight = window.innerHeight * this.options.heightRatio;\n\n        tmpImage.setAttribute('src', this.currentImage.getAttribute('src'));\n\n        this.currentImage.dataset.scale = 1;\n        this.currentImage.dataset.translateX = 0;\n        this.currentImage.dataset.translateY = 0;\n        this.zoomPanElement(0, 0, 1);\n\n        tmpImage.addEventListener('error', (event) => {\n            this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('error.' + this.eventNamespace));\n            this.isAnimating = false;\n            this.isOpen = true;\n            this.domNodes.spinner.style.display = 'none';\n\n            let dirIsDefined = direction === 1 || direction === -1;\n            if (this.initialImageIndex === this.currentImageIndex && dirIsDefined) {\n                return this.close();\n            }\n\n            if (this.options.alertError) {\n                alert(this.options.alertErrorMessage);\n            }\n\n            this.loadImage(dirIsDefined ? direction : 1);\n        });\n\n\n        tmpImage.addEventListener('load', (event) => {\n            if (typeof direction !== 'undefined') {\n                this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('changed.' + this.eventNamespace));\n                this.relatedElements[this.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'nextDone' : 'prevDone') + '.' + this.eventNamespace));\n            }\n\n            // history\n            if (this.options.history) {\n                this.updateURL();\n            }\n\n            if (this.loadedImages.indexOf(this.currentImage.getAttribute('src')) === -1) {\n                this.loadedImages.push(this.currentImage.getAttribute('src'));\n            }\n\n            let imageWidth = event.target.width,\n                imageHeight = event.target.height;\n\n            if (this.options.scaleImageToRatio || imageWidth > windowWidth || imageHeight > windowHeight) {\n                let ratio = imageWidth / imageHeight > windowWidth / windowHeight ? imageWidth / windowWidth : imageHeight / windowHeight;\n                imageWidth /= ratio;\n                imageHeight /= ratio;\n            }\n\n            this.domNodes.image.style.top = (window.innerHeight - imageHeight) / 2 + 'px';\n            this.domNodes.image.style.left = (window.innerWidth - imageWidth - this.globalScrollbarWidth) / 2 + 'px';\n            this.domNodes.image.style.width = imageWidth + 'px';\n            this.domNodes.image.style.height = imageHeight + 'px';\n\n            this.domNodes.spinner.style.display = 'none';\n            if( this.options.focus ) {\n                this.forceFocus();\n            }\n            this.fadeIn(this.currentImage, this.options.fadeSpeed, () => {\n                if( this.options.focus ) {\n                    this.domNodes.wrapper.focus();\n                }\n            });\n\n            this.isOpen = true;\n\n            let captionContainer,\n                captionText;\n\n            if (typeof this.options.captionSelector === 'string') {\n                captionContainer = this.options.captionSelector === 'self'\n                    ? this.relatedElements[this.currentImageIndex]\n                    : document.querySelector(this.generateQuerySelector(this.relatedElements[this.currentImageIndex]) + ' ' + this.options.captionSelector);\n            } else if (typeof this.options.captionSelector === 'function') {\n                captionContainer = this.options.captionSelector(this.relatedElements[this.currentImageIndex]);\n            }\n\n            if(this.options.captions && captionContainer) {\n                if (this.options.captionType === 'data') {\n                    captionText = captionContainer.dataset[this.options.captionsData];\n                } else if (this.options.captionType === 'text') {\n                    captionText = captionContainer.innerHTML;\n                } else {\n                    captionText = captionContainer.getAttribute(this.options.captionsData);\n                }\n            }\n\n            if (!this.options.loop) {\n                if (this.currentImageIndex === 0) {\n                    this.hide(this.domNodes.navigation.querySelector('.sl-prev'));\n                }\n                if (this.currentImageIndex >= this.relatedElements.length - 1) {\n                    this.hide(this.domNodes.navigation.querySelector('.sl-next'));\n                }\n                if (this.currentImageIndex > 0) {\n                    this.show(this.domNodes.navigation.querySelector('.sl-prev'));\n                }\n                if (this.currentImageIndex < this.relatedElements.length - 1) {\n                    this.show(this.domNodes.navigation.querySelector('.sl-next'));\n                }\n            } else {\n                if (this.relatedElements.length === 1) {\n                    this.hide(this.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n                } else {\n                    this.show(this.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n                }\n            }\n\n\n            if (direction === 1 || direction === -1) {\n                if (this.options.animationSlide) {\n                    this.slide(0, 100 * direction + 'px');\n                    setTimeout(() => {\n                        this.slide(this.options.animationSpeed / 1000, 0 + 'px');\n                    }, 50);\n                }\n                this.fadeIn(this.domNodes.image, this.options.fadeSpeed, () => {\n                    this.isAnimating = false;\n                    this.setCaption(captionText, imageWidth);\n                });\n\n            } else {\n                this.isAnimating = false;\n                this.setCaption(captionText, imageWidth);\n            }\n\n            if (this.options.additionalHtml && !this.domNodes.additionalHtml) {\n                this.domNodes.additionalHtml = document.createElement('div');\n                this.domNodes.additionalHtml.classList.add('sl-additional-html');\n                this.domNodes.additionalHtml.innerHTML = this.options.additionalHtml;\n                this.domNodes.image.appendChild(this.domNodes.additionalHtml);\n            }\n\n        });\n    }\n\n    zoomPanElement(targetOffsetX, targetOffsetY, targetScale) {\n\n        this.currentImage.style[this.transitionPrefix + 'transform'] = 'translate(' + targetOffsetX + ',' + targetOffsetY + ') scale(' + targetScale + ')';\n\n    };\n\n    minMax(value, min, max) {\n        return (value < min) ? min : (value > max) ? max : value;\n    };\n\n    setZoomData(initialScale, targetOffsetX, targetOffsetY) {\n        this.currentImage.dataset.scale = initialScale;\n        this.currentImage.dataset.translateX = targetOffsetX;\n        this.currentImage.dataset.translateY = targetOffsetY;\n    };\n\n\n    hashchangeHandler() {\n        if (this.isOpen && this.hash === this.initialLocationHash) {\n            this.hashReseted = true;\n            this.close();\n        }\n    }\n\n    addEvents() {\n\n        // resize/responsive\n        this.addEventListener(window, 'resize.' + this.eventNamespace, (event) => {\n            //this.adjustImage.bind(this)\n            if (this.isOpen) {\n                this.adjustImage();\n            }\n        });\n\n        this.addEventListener(this.domNodes.closeButton, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], this.close.bind(this));\n\n        if (this.options.history) {\n            setTimeout(() => {\n                this.addEventListener(window, 'hashchange.' + this.eventNamespace, (event) => {\n                    if (this.isOpen) {\n                        this.hashchangeHandler();\n                    }\n                });\n            }, 40);\n        }\n\n        this.addEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace, (event) => {\n            if (!event.currentTarget.tagName.match(/button/i)) {\n                return true;\n            }\n\n            event.preventDefault();\n            this.controlCoordinates.swipeDiff = 0;\n            this.loadImage(event.currentTarget.classList.contains('sl-next') ? 1 : -1);\n        });\n\n        if (this.options.scrollZoom) {\n            let scale = 1\n\n            this.addEventListener(this.domNodes.image, ['mousewheel','DOMMouseScroll'], (event) => {\n                if (this.controlCoordinates.mousedown || this.isAnimating || this.isClosing || !this.isOpen) {\n                    return true;\n                }\n                if(this.controlCoordinates.containerHeight == 0) {\n                    this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n                    this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n                    this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n                    this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n                    this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n                    this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n                    this.controlCoordinates.initialOffsetX = parseFloat(this.currentImage.dataset.translateX);\n                    this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                }\n                event.preventDefault();\n\n                let delta = event.delta || event.wheelDelta;\n                if (delta === undefined) {\n                    //we are on firefox\n                    delta = event.detail;\n                }\n                delta = Math.max(-1,Math.min(1,delta)); // cap the delta to [-1,1] for cross browser consistency\n\n                // apply zoom\n                scale += delta * this.options.scrollZoomFactor * scale;\n                scale = Math.max(1, Math.min( this.options.maxZoom, scale));\n\n                this.controlCoordinates.targetScale = scale;\n\n                let scrollTopPos = document.documentElement.scrollTop || document.body.scrollTop;\n\n                this.controlCoordinates.pinchOffsetX = event.pageX;\n                this.controlCoordinates.pinchOffsetY = event.pageY - scrollTopPos || 0; // need to substract the scroll position\n\n                this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n                this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n                this.controlCoordinates.scaleDifference = this.controlCoordinates.targetScale - this.controlCoordinates.initialScale;\n                this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.initialOffsetX - ((((((this.controlCoordinates.pinchOffsetX - this.controlCoordinates.containerOffsetX) - (this.controlCoordinates.containerWidth / 2)) - this.controlCoordinates.initialOffsetX) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n                this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.initialOffsetY - ((((((this.controlCoordinates.pinchOffsetY - this.controlCoordinates.containerOffsetY) - (this.controlCoordinates.containerHeight / 2)) - this.controlCoordinates.initialOffsetY) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n                this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n                if (this.controlCoordinates.targetScale > 1) {\n                    this.controlCoordinates.zoomed = true;\n                    if ( (!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                        this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                    }\n                } else {\n                    if (this.controlCoordinates.initialScale === 1) {\n                        this.controlCoordinates.zoomed = false;\n                        if (this.domNodes.caption.style.display === 'none') {\n                            this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n                        }\n                    }\n                    this.controlCoordinates.initialPinchDistance = null;\n                    this.controlCoordinates.capture = false;\n                }\n\n                this.controlCoordinates.initialPinchDistance = this.controlCoordinates.targetPinchDistance;\n                this.controlCoordinates.initialScale = this.controlCoordinates.targetScale;\n                this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n\n                this.setZoomData(this.controlCoordinates.targetScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n                this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n            });\n        }\n\n        this.addEventListener(this.domNodes.image, ['touchstart.' + this.eventNamespace, 'mousedown.' + this.eventNamespace], (event) => {\n            if (event.target.tagName === 'A' && event.type === 'touchstart') {\n                return true;\n            }\n\n            if (event.type === 'mousedown') {\n                event.preventDefault();\n                this.controlCoordinates.initialPointerOffsetX = event.clientX;\n                this.controlCoordinates.initialPointerOffsetY = event.clientY;\n                this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n                this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n                this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n                this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n                this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n                this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n                this.controlCoordinates.initialOffsetX = parseFloat(this.currentImage.dataset.translateX);\n                this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                this.controlCoordinates.capture = true;\n            } else {\n                this.controlCoordinates.touchCount = event.touches.length;\n                this.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n                this.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n                this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n                this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n                this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n                this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n                this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n                this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n                if (this.controlCoordinates.touchCount === 1) /* Single touch */ {\n                    if (!this.controlCoordinates.doubleTapped) {\n                        this.controlCoordinates.doubleTapped = true;\n                        setTimeout(() => {\n                            this.controlCoordinates.doubleTapped = false;\n                        }, 300);\n                    } else {\n\n                        this.currentImage.classList.add('sl-transition');\n                        if (!this.controlCoordinates.zoomed) {\n                            this.controlCoordinates.initialScale = this.options.doubleTapZoom;\n                            this.setZoomData(this.controlCoordinates.initialScale,0, 0);\n                            this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n\n\n                            if ( (!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                                this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                            }\n\n                            this.controlCoordinates.zoomed = true;\n                        } else {\n                            this.controlCoordinates.initialScale = 1;\n                            this.setZoomData(this.controlCoordinates.initialScale,0, 0);\n                            this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n                            this.controlCoordinates.zoomed = false;\n                        }\n\n                        setTimeout(() => {\n                            if (this.currentImage) {\n                                this.currentImage.classList.remove('sl-transition');\n                            }\n                        }, 200);\n                        return false;\n                    }\n\n                    this.controlCoordinates.initialOffsetX  = parseFloat(this.currentImage.dataset.translateX);\n                    this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                }\n                else if (this.controlCoordinates.touchCount === 2) /* Pinch */ {\n                    this.controlCoordinates.initialPointerOffsetX2 = event.touches[1].clientX;\n                    this.controlCoordinates.initialPointerOffsetY2 = event.touches[1].clientY;\n                    this.controlCoordinates.initialOffsetX = parseFloat(this.currentImage.dataset.translateX);\n                    this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                    this.controlCoordinates.pinchOffsetX = (this.controlCoordinates.initialPointerOffsetX + this.controlCoordinates.initialPointerOffsetX2) / 2;\n                    this.controlCoordinates.pinchOffsetY = (this.controlCoordinates.initialPointerOffsetY + this.controlCoordinates.initialPointerOffsetY2) / 2;\n                    this.controlCoordinates.initialPinchDistance = Math.sqrt(((this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialPointerOffsetX2) * (this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialPointerOffsetX2)) + ((this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialPointerOffsetY2) * (this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialPointerOffsetY2)));\n                }\n                this.controlCoordinates.capture = true;\n            }\n            if(this.controlCoordinates.mousedown) return true;\n            if (this.transitionCapable) {\n                this.controlCoordinates.imageLeft = parseInt(this.domNodes.image.style.left, 10);\n            }\n            this.controlCoordinates.mousedown = true;\n            this.controlCoordinates.swipeDiff = 0;\n            this.controlCoordinates.swipeYDiff = 0;\n            this.controlCoordinates.swipeStart = event.pageX || event.touches[0].pageX;\n            this.controlCoordinates.swipeYStart = event.pageY || event.touches[0].pageY;\n\n            return false;\n        });\n\n        this.addEventListener(this.domNodes.image, ['touchmove.' + this.eventNamespace, 'mousemove.' + this.eventNamespace, 'MSPointerMove'], (event) => {\n\n\n            if (!this.controlCoordinates.mousedown) {\n                return true;\n            }\n\n            if (event.type === 'touchmove') {\n                if (this.controlCoordinates.capture === false) {\n                    return false;\n                }\n\n                this.controlCoordinates.pointerOffsetX = event.touches[0].clientX;\n                this.controlCoordinates.pointerOffsetY = event.touches[0].clientY;\n                this.controlCoordinates.touchCount = event.touches.length;\n                this.controlCoordinates.touchmoveCount++;\n\n                if (this.controlCoordinates.touchCount > 1) /* Pinch */ {\n                    this.controlCoordinates.pointerOffsetX2 = event.touches[1].clientX;\n                    this.controlCoordinates.pointerOffsetY2 = event.touches[1].clientY;\n                    this.controlCoordinates.targetPinchDistance = Math.sqrt(((this.controlCoordinates.pointerOffsetX - this.controlCoordinates.pointerOffsetX2) * (this.controlCoordinates.pointerOffsetX - this.controlCoordinates.pointerOffsetX2)) + ((this.controlCoordinates.pointerOffsetY - this.controlCoordinates.pointerOffsetY2) * (this.controlCoordinates.pointerOffsetY - this.controlCoordinates.pointerOffsetY2)));\n                    if (this.controlCoordinates.initialPinchDistance === null) {\n                        this.controlCoordinates.initialPinchDistance = this.controlCoordinates.targetPinchDistance;\n                    }\n\n                    if (Math.abs(this.controlCoordinates.initialPinchDistance - this.controlCoordinates.targetPinchDistance) >= 1) {\n                        /* Initialize helpers */\n                        this.controlCoordinates.targetScale = this.minMax(this.controlCoordinates.targetPinchDistance / this.controlCoordinates.initialPinchDistance * this.controlCoordinates.initialScale, 1, this.options.maxZoom);\n                        this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n                        this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n                        this.controlCoordinates.scaleDifference = this.controlCoordinates.targetScale - this.controlCoordinates.initialScale;\n                        this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.initialOffsetX - ((((((this.controlCoordinates.pinchOffsetX - this.controlCoordinates.containerOffsetX) - (this.controlCoordinates.containerWidth / 2)) - this.controlCoordinates.initialOffsetX) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n                        this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.initialOffsetY - ((((((this.controlCoordinates.pinchOffsetY - this.controlCoordinates.containerOffsetY) - (this.controlCoordinates.containerHeight / 2)) - this.controlCoordinates.initialOffsetY) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n                        this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n                        if (this.controlCoordinates.targetScale > 1) {\n                            this.controlCoordinates.zoomed = true;\n                            if ((!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                                this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                            }\n                        }\n\n                        this.controlCoordinates.initialPinchDistance = this.controlCoordinates.targetPinchDistance;\n                        this.controlCoordinates.initialScale = this.controlCoordinates.targetScale;\n                        this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                        this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n                    }\n                } else {\n                    this.controlCoordinates.targetScale = this.controlCoordinates.initialScale;\n                    this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n                    this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n                    this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.pointerOffsetX - (this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialOffsetX), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n                    this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.pointerOffsetY - (this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialOffsetY), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n                    if (Math.abs(this.controlCoordinates.targetOffsetX) === Math.abs(this.controlCoordinates.limitOffsetX)) {\n                        this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                        this.controlCoordinates.initialPointerOffsetX = this.controlCoordinates.pointerOffsetX;\n                    }\n\n                    if (Math.abs(this.controlCoordinates.targetOffsetY) === Math.abs(this.controlCoordinates.limitOffsetY)) {\n                        this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n                        this.controlCoordinates.initialPointerOffsetY = this.controlCoordinates.pointerOffsetY;\n                    }\n\n                    this.setZoomData(this.controlCoordinates.initialScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n                    this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n                }\n            }\n\n            /* Mouse Move implementation */\n            if (event.type === 'mousemove' && this.controlCoordinates.mousedown) {\n              if(event.type == 'touchmove') return true;\n\n                event.preventDefault();\n\n              if(this.controlCoordinates.capture === false) return false;\n\n              this.controlCoordinates.pointerOffsetX = event.clientX;\n              this.controlCoordinates.pointerOffsetY = event.clientY;\n\n              this.controlCoordinates.targetScale = this.controlCoordinates.initialScale;\n              this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n              this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n              this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.pointerOffsetX - (this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialOffsetX), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n              this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.pointerOffsetY - (this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialOffsetY), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n              if (Math.abs(this.controlCoordinates.targetOffsetX) === Math.abs(this.controlCoordinates.limitOffsetX)) {\n                  this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                  this.controlCoordinates.initialPointerOffsetX = this.controlCoordinates.pointerOffsetX;\n              }\n\n              if (Math.abs(this.controlCoordinates.targetOffsetY) === Math.abs(this.controlCoordinates.limitOffsetY)) {\n                  this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n                  this.controlCoordinates.initialPointerOffsetY = this.controlCoordinates.pointerOffsetY;\n              }\n\n              this.setZoomData(this.controlCoordinates.initialScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n              this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n            }\n\n            if (!this.controlCoordinates.zoomed) {\n\n                this.controlCoordinates.swipeEnd = event.pageX || event.touches[0].pageX;\n                this.controlCoordinates.swipeYEnd = event.pageY || event.touches[0].pageY;\n                this.controlCoordinates.swipeDiff = this.controlCoordinates.swipeStart - this.controlCoordinates.swipeEnd;\n                this.controlCoordinates.swipeYDiff = this.controlCoordinates.swipeYStart - this.controlCoordinates.swipeYEnd;\n                if (this.options.animationSlide) {\n                    this.slide(0, -this.controlCoordinates.swipeDiff + 'px');\n                }\n            }\n\n        });\n\n\n        this.addEventListener(this.domNodes.image, ['touchend.' + this.eventNamespace, 'mouseup.' + this.eventNamespace, 'touchcancel.' + this.eventNamespace, 'mouseleave.' + this.eventNamespace, 'pointerup', 'pointercancel', 'MSPointerUp', 'MSPointerCancel'], (event) => {\n\n\n            if (this.isTouchDevice && event.type === 'touchend') {\n                this.controlCoordinates.touchCount = event.touches.length;\n                if (this.controlCoordinates.touchCount === 0) /* No touch */ {\n                    /* Set attributes */\n                    if (this.currentImage) {\n                        this.setZoomData(this.controlCoordinates.initialScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n                    }\n                    if (this.controlCoordinates.initialScale === 1) {\n                        this.controlCoordinates.zoomed = false;\n                        if (this.domNodes.caption.style.display === 'none') {\n                            this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n                        }\n                    }\n                    this.controlCoordinates.initialPinchDistance = null;\n                    this.controlCoordinates.capture = false;\n                } else if (this.controlCoordinates.touchCount === 1) /* Single touch */ {\n                    this.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n                    this.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n                } else if (this.controlCoordinates.touchCount > 1) /* Pinch */ {\n                    this.controlCoordinates.initialPinchDistance = null;\n                }\n            }\n\n\n            if (this.controlCoordinates.mousedown) {\n                this.controlCoordinates.mousedown = false;\n                let possibleDir = true;\n                if (!this.options.loop) {\n                    if (this.currentImageIndex === 0 && this.controlCoordinates.swipeDiff < 0) {\n                        possibleDir = false;\n                    }\n                    if (this.currentImageIndex >= this.relatedElements.length - 1 && this.controlCoordinates.swipeDiff > 0) {\n                        possibleDir = false;\n                    }\n                }\n                if (Math.abs(this.controlCoordinates.swipeDiff) > this.options.swipeTolerance && possibleDir) {\n                    this.loadImage(this.controlCoordinates.swipeDiff > 0 ? 1 : -1);\n                }\n                else if (this.options.animationSlide) {\n                    this.slide(this.options.animationSpeed / 1000, 0 + 'px');\n                }\n\n                if (this.options.swipeClose && Math.abs(this.controlCoordinates.swipeYDiff) > 50 && Math.abs(this.controlCoordinates.swipeDiff) < this.options.swipeTolerance) {\n                    this.close();\n                }\n            }\n        });\n\n        this.addEventListener(this.domNodes.image, ['dblclick'], (event) => {\n            if(this.isTouchDevice) return;\n            this.controlCoordinates.initialPointerOffsetX = event.clientX;\n            this.controlCoordinates.initialPointerOffsetY = event.clientY;\n            this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n            this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n            this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n            this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n            this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n            this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n            this.currentImage.classList.add('sl-transition');\n\n            if(!this.controlCoordinates.zoomed) {\n                this.controlCoordinates.initialScale = this.options.doubleTapZoom;\n                this.setZoomData(this.controlCoordinates.initialScale, 0, 0);\n                this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n                if ((!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                    this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                }\n                this.controlCoordinates.zoomed = true;\n            } else {\n                this.controlCoordinates.initialScale = 1;\n                this.setZoomData(this.controlCoordinates.initialScale, 0, 0);\n                this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n                this.controlCoordinates.zoomed = false;\n                if (this.domNodes.caption.style.display === 'none') {\n                    this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n                }\n\n            }\n            setTimeout(() => {\n                if (this.currentImage) {\n                    this.currentImage.classList.remove('sl-transition');\n                    this.currentImage.style[this.transitionPrefix + 'transform-origin'] = null;\n                }\n            }, 200);\n\n            this.controlCoordinates.capture = true;\n            return false;\n        });\n\n    }\n\n    getDimensions(element) {\n        let styles = window.getComputedStyle(element),\n            height = element.offsetHeight,\n            width = element.offsetWidth,\n            borderTopWidth = parseFloat(styles.borderTopWidth),\n            borderBottomWidth = parseFloat(styles.borderBottomWidth),\n            paddingTop = parseFloat(styles.paddingTop),\n            paddingBottom = parseFloat(styles.paddingBottom),\n            borderLeftWidth = parseFloat(styles.borderLeftWidth),\n            borderRightWidth = parseFloat(styles.borderRightWidth),\n            paddingLeft = parseFloat(styles.paddingLeft),\n            paddingRight = parseFloat(styles.paddingRight);\n        return {\n            height: height - borderBottomWidth - borderTopWidth - paddingTop - paddingBottom,\n            width: width - borderLeftWidth - borderRightWidth - paddingLeft - paddingRight\n        };\n    }\n\n    updateHash() {\n        let newHash = 'pid=' + (this.currentImageIndex + 1),\n            newURL = window.location.href.split('#')[0] + '#' + newHash;\n\n        this.hashReseted = false;\n\n        if (this.pushStateSupport) {\n            window.history[this.historyHasChanges ? 'replaceState' : 'pushState']('', document.title, newURL);\n        } else {\n            // what is the browser target of this?\n            if (this.historyHasChanges) {\n                window.location.replace(newURL);\n            } else {\n                window.location.hash = newHash;\n            }\n        }\n        if(!this.historyHasChanges) {\n            this.urlChangedOnce = true;\n        }\n\n        this.historyHasChanges = true;\n    }\n\n    resetHash() {\n        this.hashReseted = true;\n        if(this.urlChangedOnce) {\n            history.back();\n        } else {\n            if (this.pushStateSupport) {\n                history.pushState('', document.title, window.location.pathname + window.location.search);\n            } else {\n                window.location.hash = '';\n            }\n        }\n        //\n        //in case an history operation is still pending\n        clearTimeout(this.historyUpdateTimeout);\n    }\n\n    updateURL() {\n        clearTimeout(this.historyUpdateTimeout);\n        if (!this.historyHasChanges) {\n            this.updateHash(); // first time\n        } else {\n            this.historyUpdateTimeout = setTimeout(this.updateHash.bind(this), 800);\n        }\n    }\n\n    setCaption(captionText, imageWidth) {\n        if (this.options.captions && captionText && captionText !== '' && typeof captionText !== \"undefined\") {\n            this.hide(this.domNodes.caption);\n            this.domNodes.caption.style.width = imageWidth + 'px';\n            this.domNodes.caption.innerHTML = captionText;\n\n            this.domNodes.image.appendChild(this.domNodes.caption);\n\n            setTimeout(() => {\n                this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n            }, this.options.captionDelay);\n        }\n    }\n\n    slide(speed, pos) {\n        if (!this.transitionCapable) {\n            return this.domNodes.image.style.left = pos;\n        }\n\n        this.domNodes.image.style[this.transitionPrefix + 'transform'] = 'translateX(' + pos + ')';\n        this.domNodes.image.style[this.transitionPrefix + 'transition'] = this.transitionPrefix + 'transform ' + speed + 's linear';\n    }\n\n    getRelated(rel) {\n        let elems;\n        if (rel && rel !== false && rel !== 'nofollow') {\n            elems = Array.from(this.elements).filter(element => element.getAttribute('rel') === rel);\n        } else {\n            elems = this.elements;\n        }\n        return elems;\n    }\n\n    openImage(element) {\n        element.dispatchEvent(new Event('show.' + this.eventNamespace));\n\n        this.globalScrollbarWidth = this.getScrollbarWidth();\n        if (this.options.disableScroll) {\n            this.toggleScrollbar('hide');\n            this.globalScrollbarWidth = 0;\n        }\n\n        if (this.options.htmlClass && this.options.htmlClass !== '') {\n            document.querySelector('html').classList.add(this.options.htmlClass);\n        }\n\n        document.body.appendChild(this.domNodes.wrapper);\n\n        this.domNodes.wrapper.appendChild(this.domNodes.image);\n        if (this.options.overlay) {\n            document.body.appendChild(this.domNodes.overlay);\n        }\n\n        this.relatedElements = this.getRelated(element.rel);\n\n        if (this.options.showCounter) {\n            if (this.relatedElements.length == 1 && this.domNodes.wrapper.contains(this.domNodes.counter)) {\n                this.domNodes.wrapper.removeChild(this.domNodes.counter);\n            } else if(this.relatedElements.length > 1 && !this.domNodes.wrapper.contains(this.domNodes.counter)) {\n                this.domNodes.wrapper.appendChild(this.domNodes.counter);\n            }\n        }\n\n        this.isAnimating = true;\n\n        this.currentImageIndex = this.relatedElements.indexOf(element);\n\n        let targetURL = element.getAttribute(this.options.sourceAttr);\n\n        this.currentImage = document.createElement('img');\n        this.currentImage.style.display = 'none';\n        this.currentImage.setAttribute('src', targetURL);\n        this.currentImage.dataset.scale = 1;\n        this.currentImage.dataset.translateX = 0;\n        this.currentImage.dataset.translateY = 0;\n\n        if (this.loadedImages.indexOf(targetURL) === -1) {\n            this.loadedImages.push(targetURL);\n        }\n\n        this.domNodes.image.innerHTML = '';\n        this.domNodes.image.setAttribute('style', '');\n\n        this.domNodes.image.appendChild(this.currentImage);\n\n\n        this.fadeIn(this.domNodes.overlay, this.options.fadeSpeed);\n        this.fadeIn([this.domNodes.counter, this.domNodes.navigation, this.domNodes.closeButton], this.options.fadeSpeed);\n\n        this.show(this.domNodes.spinner);\n        this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n        this.domNodes.counter.querySelector('.sl-total').innerHTML = this.relatedElements.length;\n\n        this.adjustImage();\n        if (this.options.preloading) {\n            this.preload();\n        }\n\n        setTimeout(() => {\n            element.dispatchEvent(new Event('shown.' + this.eventNamespace));\n        }, this.options.animationSpeed);\n    }\n\n    forceFocus() {\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n        this.addEventListener(document, 'focusin.' + this.eventNamespace, event => {\n            if (document !== event.target &&\n                this.domNodes.wrapper !== event.target &&\n                !this.domNodes.wrapper.contains(event.target)) {\n                this.domNodes.wrapper.focus();\n            }\n        });\n    }\n\n    // utility\n    addEventListener(elements, events, callback, opts) {\n        elements = this.wrap(elements);\n        events = this.wrap(events);\n\n        for (let element of elements) {\n            if (!element.namespaces) {\n                element.namespaces = {};\n            } // save the namespaces addEventListener the DOM element itself\n\n            for (let event of events) {\n                let options = opts || false;\n                let needsPassiveFix = ['touchstart', 'touchmove','mousewheel','DOMMouseScroll'].indexOf(event.split('.')[0]) >= 0;\n                if (needsPassiveFix && this.isPassiveEventsSupported) {\n                    if (typeof options === 'object') {\n                        options.passive = true;\n                    } else {\n                        options = {passive: true};\n                    }\n                }\n\n                element.namespaces[event] = callback;\n                element.addEventListener(event.split('.')[0], callback, options);\n            }\n        }\n    }\n\n    removeEventListener(elements, events) {\n        elements = this.wrap(elements);\n        events = this.wrap(events);\n        for (let element of elements) {\n            for (let event of events) {\n                if(element.namespaces && element.namespaces[event]) {\n                    element.removeEventListener(event.split('.')[0], element.namespaces[event]);\n                    delete element.namespaces[event];\n                }\n            }\n        }\n    }\n\n    fadeOut(elements, duration, callback) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            element.style.opacity = parseFloat(element) || window.getComputedStyle(element).getPropertyValue(\"opacity\");\n        }\n\n        this.isFadeIn = false;\n\n        let step = 16.66666 / (duration || this.options.fadeSpeed),\n            fade = () => {\n                let currentOpacity = parseFloat(elements[0].style.opacity);\n                if ((currentOpacity -= step) < 0) {\n                    for (let element of elements) {\n                        element.style.display = \"none\";\n                        // element.style.opacity = '';\n                        element.style.opacity = 1;\n                    }\n                    callback && callback.call(this, elements);\n                } else {\n                    for (let element of elements) {\n                        element.style.opacity = currentOpacity;\n                    }\n                    requestAnimationFrame(fade);\n                }\n            };\n\n        fade();\n    }\n\n    fadeIn(elements, duration, callback, display) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            element.style.opacity = 0;\n            element.style.display = display || \"block\";\n        }\n\n        this.isFadeIn = true;\n\n        let opacityTarget = parseFloat(elements[0].dataset.opacityTarget || 1),\n            step = (16.66666 * opacityTarget) / (duration || this.options.fadeSpeed),\n            fade = () => {\n                let currentOpacity = parseFloat(elements[0].style.opacity);\n                if (!((currentOpacity += step) > opacityTarget)) {\n                    for (let element of elements) {\n                        element.style.opacity = currentOpacity;\n                    }\n                    if(!this.isFadeIn) return;\n                    requestAnimationFrame(fade);\n                } else {\n                    for (let element of elements) {\n                        element.style.opacity = opacityTarget;\n                    }\n                    callback && callback.call(this, elements);\n                }\n            };\n\n        fade();\n    }\n\n    hide(elements) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            if(element.style.display != 'none') {\n                element.dataset.initialDisplay = element.style.display;\n            }\n            element.style.display = 'none';\n        }\n    }\n\n    show(elements, display) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            element.style.display = element.dataset.initialDisplay || display || 'block';\n        }\n    }\n\n    wrap(input) {\n        return typeof input[Symbol.iterator] === 'function' && typeof input !== 'string' ? input : [input];\n    }\n\n    on(events, callback) {\n        events = this.wrap(events);\n        for (let element of this.elements) {\n            if (!element.fullyNamespacedEvents) {\n                element.fullyNamespacedEvents = {};\n            }\n            for (let event of events) {\n                element.fullyNamespacedEvents[event] = callback;\n                element.addEventListener(event, callback);\n            }\n        }\n        return this;\n    }\n\n    off(events) {\n        events = this.wrap(events);\n        for (let element of this.elements) {\n            for (let event of events) {\n                if (typeof element.fullyNamespacedEvents !== 'undefined' && event in element.fullyNamespacedEvents) {\n                    element.removeEventListener(event, element.fullyNamespacedEvents[event]);\n                }\n            }\n        }\n        return this;\n    }\n\n    // api\n\n    open(elem) {\n        elem = elem || this.elements[0];\n        if(typeof jQuery !== \"undefined\" && elem instanceof jQuery) {\n            elem = elem.get(0);\n        }\n        this.initialImageIndex = this.elements.indexOf(elem);\n        if(this.initialImageIndex > -1) {\n            this.openImage(elem);\n        }\n    }\n\n    next() {\n        this.loadImage(1);\n    }\n\n    prev() {\n        this.loadImage(-1);\n    }\n\n    // get some useful data\n    getLighboxData() {\n        return {\n            currentImageIndex: this.currentImageIndex,\n            currentImage: this.currentImage,\n            globalScrollbarWidth: this.globalScrollbarWidth\n        };\n    }\n\n    //close is exposed anyways..\n\n    destroy() {\n        //remove all custom event listeners from elements\n        this.off([\n            'close.' + this.eventNamespace,\n            'closed.' + this.eventNamespace,\n            'nextImageLoaded.' + this.eventNamespace,\n            'prevImageLoaded.' + this.eventNamespace,\n            'change.' + this.eventNamespace,\n            'nextDone.' + this.eventNamespace,\n            'prevDone.' + this.eventNamespace,\n            'error.' + this.eventNamespace,\n            'changed.' + this.eventNamespace,\n            'next.' + this.eventNamespace,\n            'prev.' + this.eventNamespace,\n            'show.' + this.eventNamespace,\n            'shown.' + this.eventNamespace\n        ]);\n\n        this.removeEventListener(this.elements, 'click.' + this.eventNamespace);\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n        this.removeEventListener(document.body, 'contextmenu.' + this.eventNamespace);\n        this.removeEventListener(document.body, 'keyup.' + this.eventNamespace);\n\n        this.removeEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace);\n        this.removeEventListener(this.domNodes.closeButton, 'click.' + this.eventNamespace);\n        this.removeEventListener(window, 'resize.' + this.eventNamespace);\n        this.removeEventListener(window, 'hashchange.' + this.eventNamespace);\n\n        this.close();\n        if (this.isOpen) {\n            document.body.removeChild(this.domNodes.wrapper);\n            document.body.removeChild(this.domNodes.overlay);\n        }\n\n        this.elements = null;\n    }\n\n    refresh() {\n        if (!this.initialSelector) {\n            throw 'refreshing only works when you initialize using a selector!';\n        }\n\n        let options = this.options,\n            selector = this.initialSelector;\n\n        this.destroy();\n\n        this.constructor(selector, options);\n\n        return this;\n    }\n}\nexport default SimpleLightbox;\n\nglobal.SimpleLightbox = SimpleLightbox;\n","import { galleryItems } from './gallery-items';\nimport SimpleLightbox from 'simplelightbox/dist/simple-lightbox.esm';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n// Add imports above this line\n\n// Change code below this line\nconst galleryContainer = document.querySelector('div.gallery');\nconst listGallery = createGalleryItems(galleryItems);\n\ngalleryContainer.insertAdjacentHTML('beforeend', listGallery);\ngalleryContainer.addEventListener('click', onGalleryContainerClick);\n\nlet gallery = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionsDelay: 250,\n  captionPosition: 'bottom',\n  overlayOpacity: 0.8,\n  scrollZoom: false,\n});\n\ngallery.on('show.simplelightbox');\nfunction createGalleryItems(gallery) {\n  return gallery\n    .map(({ preview, original, description }) => {\n      return `\n         <a class=\"gallery__item\" href=\"${original}\">\n         <img class=\"gallery__image\" src=\"${preview}\" alt=\"${description}\" />\n         </a>`;\n    })\n    .join('');\n}\n\nfunction onGalleryContainerClick(e) {\n  e.preventDefault();\n\n  const isGalleryImage = e.target.classList.contains('gallery__image');\n  if (!isGalleryImage) {\n    return;\n  }\n}\n"],"names":["Object","defineProperty","module","exports","value","default","arr","Array","isArray","$f215c72f040a88cf$var$_arrayLikeToArray","obj","parcelRequire","__esModule","len","length","i","arr2","iter","Symbol","iterator","from","TypeError","o","minLen","$7a2c4c4c44c69707$var$_arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","test","$665014edacbfe17b$exports","instance","Constructor","$74e7f8130373505f$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","key","$74e7f8130373505f$exports","protoProps","staticProps","$cec85eba0a352189$exports","$6195f07b5409ba15$exports","$6195f07b5409ba15$var$_arrayWithoutHoles","$6195f07b5409ba15$var$_iterableToArray","$6195f07b5409ba15$var$_unsupportedIterableToArray","$6195f07b5409ba15$var$_nonIterableSpread","$6195f07b5409ba15$var$_interopRequireDefault","SimpleLightbox","elements","options","_this","this","$parcel$interopDefault","sourceAttr","nav","navText","captions","captionDelay","captionSelector","captionType","captionsData","captionPosition","captionClass","close","closeText","swipeClose","showCounter","fileExt","animationSlide","animationSpeed","preloading","enableKeyboard","loop","rel","docClose","swipeTolerance","className","widthRatio","heightRatio","scaleImageToRatio","disableRightClick","disableScroll","alertError","alertErrorMessage","additionalHtml","history","throttleInterval","doubleTapZoom","maxZoom","htmlClass","rtl","fixedClass","fadeSpeed","uniqueImages","focus","scrollZoom","scrollZoomFactor","window","navigator","platform","swipeDiff","swipeYDiff","swipeStart","swipeEnd","swipeYStart","swipeYEnd","mousedown","imageLeft","zoomed","containerHeight","containerWidth","containerOffsetX","containerOffsetY","imgHeight","imgWidth","capture","initialOffsetX","initialOffsetY","initialPointerOffsetX","initialPointerOffsetY","initialPointerOffsetX2","initialPointerOffsetY2","initialScale","initialPinchDistance","pointerOffsetX","pointerOffsetY","pointerOffsetX2","pointerOffsetY2","targetOffsetX","targetOffsetY","targetScale","pinchOffsetX","pinchOffsetY","limitOffsetX","limitOffsetY","scaleDifference","targetPinchDistance","touchCount","doubleTapped","touchmoveCount","assign","defaultOptions","isPassiveEventsSupported","checkPassiveEventsSupport","initialSelector","document","querySelectorAll","relatedElements","transitionPrefix","calculateTransitionPrefix","initialLocationHash","hash","getRelated","filter","element","src","getAttribute","_this1","imgArr","indexOf","push","createDomNodes","domNodes","wrapper","appendChild","closeButton","navigation","spinner","eventNamespace","event","isValidLink","currentTarget","preventDefault","isAnimating","initialImageIndex","openImage","addEventListener","isOpen","body","parentElement","classList","contains","throttle","controlCoordinates","currentImage","setAttribute","opts","get","supportsPassive","e","elem","tagName","id","parentNode","str","concat","classes","split","childIndex","generateQuerySelector","overlay","createElement","add","dataset","opacityTarget","overlayOpacity","innerHTML","counter","caption","_classList","captionClasses","apply","image","func","limit","inThrottle","arguments","setTimeout","RegExp","s","documentElement","style","scrollbarWidth","scrollDiv","removeChild","type","fullWindowWidth","innerWidth","documentElementRect","getBoundingClientRect","right","Math","abs","left","clientWidth","isAppleDevice","paddingRight","parseInt","getScrollbarWidth","originalPaddingRight","forEach","actualPadding","calculatedPadding","getComputedStyle","parseFloat","remove","fixedElements","padding","isClosing","currentImageIndex","dispatchEvent","Event","historyHasChanges","hashReseted","resetHash","removeEventListener","fadeOut","toggleScrollbar","querySelector","minMax","location","substring","index","next","prev","nextImage","Image","prevImage","loadedImages","direction","slideDirection","newIndex","slide","_this2","show","adjustImage","tmpImage","windowWidth","windowHeight","innerHeight","scale","translateX","translateY","zoomPanElement","display","dirIsDefined","alert","loadImage","_this5","updateURL","captionText","imageWidth","width","imageHeight","height","ratio","top","globalScrollbarWidth","forceFocus","fadeIn","captionContainer","hide","_this4","_this3","setCaption","min","max","bind","_this7","hashchangeHandler","getElementsByTagName","match","_this6","getDimensions","offsetLeft","offsetTop","delta","wheelDelta","undefined","detail","scrollTopPos","scrollTop","pageX","pageY","opacity","setZoomData","clientX","clientY","touches","_this8","_this9","sqrt","transitionCapable","possibleDir","_this10","isTouchDevice","styles","offsetHeight","offsetWidth","borderTopWidth","borderBottomWidth","paddingTop","paddingBottom","borderLeftWidth","borderRightWidth","paddingLeft","newURL","href","newHash","pushStateSupport","title","urlChangedOnce","back","pushState","pathname","search","historyUpdateTimeout","updateHash","pos","speed","targetURL","events","callback","wrap","_didIteratorError","_iteratorError","_step","namespaces","_didIteratorError1","_iteratorError1","_step1","_iterator1","_iteratorNormalCompletion1","done","passive","return","_iterator","_iteratorNormalCompletion","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion2","duration","_didIteratorError4","_iteratorError4","_iteratorNormalCompletion4","fade","step","_didIteratorError3","_iteratorError3","_step3","_iterator3","_iteratorNormalCompletion3","_didIteratorError6","_iteratorError6","_didIteratorError5","_iteratorError5","_step4","_iterator4","_iteratorNormalCompletion5","isFadeIn","initialDisplay","input","fullyNamespacedEvents","_didIteratorError7","_iteratorError7","_step5","_iterator5","_didIteratorError8","_iteratorError8","_step6","_iterator6","_iteratorNormalCompletion8","off","$d8d07e2615fdd861$var$galleryContainer","$d8d07e2615fdd861$var$listGallery","preview","original","description","map","param","join","insertAdjacentHTML","$da756839c7c43f1c$export$2e2bcd8739ae039","captionsDelay","on"],"version":3,"file":"01-gallery.bc5213d5.js.map"}